{"version":3,"sources":["images sync /^/.//.*$","images/1.jpg","images/10.jpg","images/11.jpg","images/12.jpg","images/13.jpg","images/14.jpg","images/15.jpg","images/16.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","images/7.jpg","images/8.jpg","images/9.jpg","Header.js","App.js","serviceWorker.js","index.js"],"names":["map","./1.jpg","./10.jpg","./11.jpg","./12.jpg","./13.jpg","./14.jpg","./15.jpg","./16.jpg","./2.jpg","./3.jpg","./4.jpg","./5.jpg","./6.jpg","./7.jpg","./8.jpg","./9.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Header","props","react_default","a","createElement","className","message","style","color","score","topScore","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","images","toConsumableArray","Array","_","i","concat","clickedImages","game","image","length","indexOf","shuffled","sort","Math","random","setState","max","_this2","src_Header_0","onClick","handleClick","key","src","require","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63c65955.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": 21,\n\t\"./10.jpg\": 22,\n\t\"./11.jpg\": 23,\n\t\"./12.jpg\": 24,\n\t\"./13.jpg\": 25,\n\t\"./14.jpg\": 26,\n\t\"./15.jpg\": 27,\n\t\"./16.jpg\": 28,\n\t\"./2.jpg\": 29,\n\t\"./3.jpg\": 30,\n\t\"./4.jpg\": 31,\n\t\"./5.jpg\": 32,\n\t\"./6.jpg\": 33,\n\t\"./7.jpg\": 34,\n\t\"./8.jpg\": 35,\n\t\"./9.jpg\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/1.5e71ed37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.0307581d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.4cee36d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/12.9eee3d4c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13.63feff10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/14.bb6c335d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/15.1a71f06c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.8c2ab92a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.6202c25b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.97b224a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.d490c08d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.14e351b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.8c14bfae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.ee0be8a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.1d2c4784.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.7a46496e.jpg\";","import React from 'react';\n\nimport './Header.css';\n\nlet Header = (props) => {\n    return (<header className=\"Header\">\n        <div className=\"Header-title\">Ufufy game</div>\n        <div className=\"Header-message\">{props.message && <span style={{ color: '#ff0000' }}>{props.message}</span>}</div>\n        <div className=\"Header-scores\">Your score: {props.score} | Top score: {props.topScore}</div>\n    </header>)\n};\n\nexport default Header;","import React, { Component } from 'react';\n\nimport './App.css';\nimport Header from './Header';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      score: 0,\n      topScore: 0,\n      images: [...Array(16)].map((_, i) => `${i + 1}.jpg`),\n      clickedImages: [],\n      game: 0\n    };\n  }\n\n  handleClick(image) {\n    if (this.state.score === this.state.images.length) {\n      this.setState({ topScore: this.state.images.length });\n      return;\n    }\n    if (this.state.clickedImages.indexOf(image) === -1) {\n      let shuffled = [...this.state.images].sort(() => Math.random() - 0.5);\n\n      this.setState({\n        score: this.state.score + 1,\n        clickedImages: [...this.state.clickedImages, image],\n        images: shuffled\n      });\n    } else {\n      this.setState({\n        score: 0,\n        topScore: Math.max(this.state.topScore, this.state.score),\n        clickedImages: [],\n        game: this.state.game + 1\n      });\n    }\n  }\n\n  render() {\n    var message;\n\n    if (this.state.game > 0) {\n      if (this.state.clickedImages.length == 0) {\n        message = 'You clicked incorrectly';\n      } else if (this.state.score === this.state.images.length) {\n        message = 'You win';\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <Header score={this.state.score} topScore={this.state.topScore} message={message} />\n        <div className=\"App-imageContainer\">\n          {this.state.images.map((image) => (\n            <div className=\"App-image\" onClick={() => this.handleClick(image)}>\n              <img key={image} src={require(`./images/${image}`)} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}